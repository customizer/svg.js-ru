<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>svg.js Справочное руководство</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="1.css">
<script type="text/javascript" src="1.js"></script>
</head>

<body>
<h3>События</h3>
SVG.js поддерживает названные события, слушатели событий и настраиваемые события, без каких-либо взаимосвязей с любой другой библиотекой.<br><br>

<h4 id="1">Базовые события</h4>
<div class=blockindent><br>
<pre id="1element.click"><span class="lnk" onmouseover="show('element click - клик по элементу')" onmouseout="hide()"><span class="shadow">element.</span>click()</span></pre>
<div class=list>возвращает - самого себя (itself)</div>
События можно связать с элементами следующим образом:
<pre>// javascript
element.click(function() {
  this.fill({ color: '#f06' })
})</pre>
Удалить его так же просто:
<pre>// javascript
element.click(null)</pre>
Вот все остальные доступные события: <tt>click</tt>, <tt>dblclick</tt>, <tt>mousedown</tt>, <tt>mouseup</tt>, <tt>mouseover</tt>, <tt>mouseout</tt>, <tt>mousemove</tt>, <tt>touchstart</tt>, <tt>touchmove</tt>, <tt>touchleave</tt>, <tt>touchend</tt> и <tt>touchcancel</tt>...</div><br><br>


<h4 id="2">Слушатели событий</h4>
<div class=blockindent><br>
<pre id="2element.fire"><span class="lnk" onmouseover="show('element fire - запуск (события) элемента')" onmouseout="hide()"><span class="shadow">element.</span>fire()</span></pre>
<div class=list>возвращает - самого себя (itself)</div>
Запуск события:
<pre>// javascript
element.fire(event)</pre>
Дополнительно, в качестве второго аргумента, может быть передан объект с произвольными данными:
<pre>// javascript
element.fire(event, { arbitrary: data })</pre><br>

<pre id="2element.event"><span class="lnk" onmouseover="show('element event - событие элемента')" onmouseout="hide()"><span class="shadow">element.</span>event()</span></pre>
<div class=list>возвращает - <tt>event</tt></div>
Когда, с помощью метода <tt>fire()</tt>, вызывается данное событие, то переданное событие будет сохранено локально. Метод <tt>event()</tt> предоставляет доступ к этому сохраненному событию:
<pre>// javascript
var event = element.event()</pre><br>

<pre id="2element.on"><span class="lnk" onmouseover="show('element on - элемент включен')" onmouseout="hide()"><span class="shadow">element.</span>on()</span></pre>
<div class=list>возвращает - самого себя (itself)</div>
<pre>// javascript
var click = function() {
  this.fill({ color: '#f06' })
}<br>
element.on('click', click)</pre>
<div class=note><b>Примечание:</b> Контекст <tt>this</tt> в функции обратного вызова связан с элементом (<tt>element</tt>). Можно изменить этот контекст, применив свой собственный объект:
<pre>// javascript
element.on('click', click, window) // context of this is window (здесь контекстом является window)</pre></div><br>

<pre id="2element.off"><span class="lnk" onmouseover="show('element off - элемент отключен')" onmouseout="hide()"><span class="shadow">element.</span>off()</span></pre>
<div class=list>возвращает - самого себя (itself)</div>
Снимать привязку событий также просто:
<pre>// javascript
element.off('click', click)</pre>
Или отменить привязку всех слушателей событий для данного события:
<pre>// javascript
element.off('click')</pre>
Или даже снять привязку всех слушателей событий для всех событий:
<pre>// javascript
element.off()</pre><br>

<h5>Другие элементы</h5>
Добавление и удаление слушателей событий от элементов также работает и на других элементах.
<pre id="2SVG.on"><span class="lnk" onmouseover="show('SVG on - SVG включен')" onmouseout="hide()"><span class="shadow">SVG.</span>on()</span></pre>
<pre>// javascript
SVG.on(window, 'click', click)</pre><br>
<pre id="2SVG.off"><span class="lnk" onmouseover="show('SVG off - SVG отключен')" onmouseout="hide()"><span class="shadow">SVG.</span>off()</span></pre>
<pre>// javascript
SVG.off(window, 'click', click)</pre></div><br><br>


<h4 id="3">Настраиваемые события</h4>
Также можно использовать свои собственные события.<br>
Просто добавьте слушателя события для своего события:
<pre>// javascript
element.on('myevent', function() {
  alert('ta-da!')
})</pre>
Теперь все готово для запуска события всякий раз, когда понадобится:
<pre>// javascript
function whenSomethingHappens() {
  element.fire('myevent')
}<br>
// or if you want to pass an event
// или, если нужно пропустить событие
function whenSomethingHappens(event) {
  element.fire(event)
}</pre>
Также можно передать некие данные на событие:
<pre>// javascript
function whenSomethingHappens() {
  element.fire('myevent', {some:'data'})
}<br>
element.on('myevent', function(e) {
  alert(e.detail.some) // outputs 'data' (выходные 'данные')
})</pre>
SVG.js поддерживает события пространства имен со следующим синтаксисом <tt><span class="lnk" onmouseover="show('то есть, - <tt>событие.пространство_имен</tt>')" onmouseout="hide()">event.namespace</span></tt>.<br>
Событие пространства имен ведет себя как обычное событие, с той разницей, что удалить его можно не затрагивая обработчики из других пространств имен.
<pre>// javascript
// attach (подключение)
element.on('myevent.namespace', function(e) {
  // do something (здесь делаем что-нибудь)
})<br>
// detach all handlers of namespace for myevent
// отсоединить все обработчики пространства имен для события myevent
element.off('myevent.namespace')<br>
// detach all handlers of namespace
// отсоединить все обработчики пространства имен
element.off('.namespace')<br>
// detach all handlers including all namespaces
// отсоединить все обработчики, включая все пространства имен
element.off('myevent')</pre>
Однако, запустить определенное событие пространства имен нельзя. Вызов <tt>element.fire('myevent.namespace')</tt> не будет ничего делать, пока работает <tt>element.fire('myevent')</tt> и запускает все подключенные обработчики события.
<div class=important><b>Важно:</b> Во избежание конфликтов, всегда проверяйте пространство имен события. Желательно использовать что-то конкретное.
Так например, <tt><span class="lnk" onmouseover="show('event wicked - злое событие')" onmouseout="hide()">event.wicked</span></tt> будет лучше, чем нечто общее, вроде <tt><span class="lnk" onmouseover="show('event svg - svg событие')" onmouseout="hide()">event.svg</span></tt>.</div><br><br>

<br><br>
</body></html>
